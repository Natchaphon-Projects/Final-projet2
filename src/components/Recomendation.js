import { useParams } from "react-router-dom";
import axios from "axios";
import { useNavigate } from 'react-router-dom';
import { useEffect } from "react";
import React, { useState } from 'react';
import './Recomendation.css';
import { resultData } from './data/resultData'; // Import array ‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏°‡∏≤
import Header from "../components/layout/Header";
import Footer from "../components/layout/Footer";
import WeightChart from '../components/chart/WeightChart';
import HeightChart from '../components/chart/HeightChart';
import Sunglasscat from '../assets/cat-sunglass.jpg';
import { useLocation } from "react-router-dom";

function Recomendation() {
    const location = useLocation();
    const patient = location.state?.patient;
    const { id } = useParams();
    const [record, setRecord] = useState(null);
    const [showFullTable, setShowFullTable] = useState(false);
    const [isDropdownOpen, setIsDropdownOpen] = useState(false);
    const [selectedOption, setSelectedOption] = useState("‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏≠‡∏∑‡πà‡∏ô");
    useEffect(() => {
  if (id) {
    axios.get(`http://localhost:5000/patients/${id}/records`)
      .then((res) => {
        console.log("üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:", res.data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
        setRecord(res.data); // ‚úÖ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á .data[0] ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ backend ‡∏™‡πà‡∏á object ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß
      })
      .catch((err) => console.error("‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", err));
  }
}, [id]);


if (!patient) {
  return (
    <div style={{ padding: 20 }}>
      <h2>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</h2>
      <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
    </div>
  );
}

    const handleSelect = (option) => {
        setSelectedOption(option);
        setIsDropdownOpen(false);
    };




    return (
        <div className="dashboard-container">
            <Header />
            <div className="recommendation-page">

                {/* Page Title */}
                <div className="recommendation-title">
                    ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
                </div>

                {/* Patient Info + Graph */}
                <div className="recommendation-patient-wrapper">

                    {/* ‡∏ã‡πâ‡∏≤‡∏¢: Patient Section */}
                    <div className="recommendation-patient-section">


                        {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏π‡∏õ + ‡∏ä‡∏∑‡πà‡∏≠ + ‡∏õ‡∏∏‡πà‡∏° */}
                        <div className="patient-profile">
                            <div className="patient-health-badge">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</div>
                            <div className="patient-date">
                                ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {new Date().toLocaleDateString('th-TH')}


                            </div>
                            <img
                                src={Sunglasscat}
                                alt="Patient Avatar"
                                className="patient-icon-image"
                            />

                            <div className="patient-name-large">{patient.name || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠"}</div>



                        </div>

                        {/* ‡∏Ç‡∏ß‡∏≤: Grid 2 columns */}
                        <div className="patient-main-info">

                            <div className="patient-info-grid-two">
                                <div className="info-card">
  <div className="label">HN:</div>
  <div className="value">{patient.patientId || "--"}</div>
</div>

                                <div className="info-card">
                                     <div className="label">‡πÄ‡∏û‡∏®:</div>
                                     <div className="value">{patient.gender === "male" ? "‡∏ä‡∏≤‡∏¢" : "‡∏´‡∏ç‡∏¥‡∏á"}</div>
                                </div>
                                <div className="info-card">
                                    <div className="label">‡∏≠‡∏≤‡∏¢‡∏∏:</div>
                                    <div className="value">{patient.age || "--"}</div>
                                </div>
                             <div className="info-card">
                                <div className="label">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:</div>
                                <div className="value">{record?.weight ? `${record.weight} ‡∏Å‡∏Å.` : "--"}</div>
                            </div>

                              <div className="info-card">
                                <div className="label">‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á:</div>
                                <div className="value">{record?.height ? `${record.height} ‡∏ã‡∏°.` : "--"}</div>
                            </div>

                            <div className="info-card">
                                <div className="label">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß:</div>
                                <div className="value">{record?.congenital_disease || "--"}</div>
                            </div>

                            </div>

                        </div>

                    </div>


                    {/* ‡∏Ç‡∏ß‡∏≤: Graph */}
                    <div className="patient-graph-section">
                        <WeightChart />
                    </div>
                    <div className="patient-graph-section">
                        <HeightChart />
                    </div>
                </div>

                {/* Action Buttons */}
                {/* ‚úÖ Dropdown ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ */}

                <div className="recommendation-action-buttons">
                    <div className="dropdown-wrapper">
                        <select className="recommendation-dropdown">
                            <option value="">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏≠‡∏∑‡πà‡∏ô</option>
                            <option value="history">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥</option>
                            <option value="checkup">‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</option>
                            <option value="edit">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</option>
                        </select>
                    </div>

                    <div className="action-buttons-wrapper">
                        <button className="recommendation-action-btn">‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</button>
                        <button className="recommendation-action-btn">‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á</button>
                        <button className="recommendation-action-btn">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥</button>
                    </div>
                </div>

                {/* Assessment Status */}
                {record?.status && (
                <div className="recommendation-status">
                    <div className="status-text">‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå: {record.status} ({record.status === "Normal" ? "‡∏õ‡∏Å‡∏ï‡∏¥" : "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå"})</div>
                    <div className="status-subtext">Assessment Status</div>
                </div>
                )}

                {/* ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à Section */}
                <div className="recommendation-result-section">

                    <div className="result-header-row">
                        <div className="result-title">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à :</div>

                        <div className="info-card">
                            <div className="label">‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£:</div>
                            <div className="value">{record?.Food_allergy || "--"}</div>
                        </div>

                        <div className="info-card">
                            <div className="label">‡πÅ‡∏û‡πâ‡∏¢‡∏≤:</div>
                            <div className="value">{record?.drug_allergy || "--"}</div>
                        </div>



                    </div>

                    {/* Wrapper ‚Üí 2 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
                    <div className="result-table-wrapper">

                        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢ (3/4) */}
                        <div className="result-table-block left">
                            <table className="result-table">
                                <thead>
                                    <tr>
                                        <th>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</th>
                                        <th>‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</th>
                                        <th>‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô</th>
                                        <th>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {resultData.slice(0, 5).map((item, index) => (
                                        <tr key={index}>
                                            <td>{item.info}</td>
                                            <td>
                                                <span className={item.behaviorType === 'red' ? 'badge-red' : 'badge-green'}>
                                                    {item.behavior}
                                                </span>
                                            </td>
                                            <td>
                                                <span className={item.calcType === 'red' ? 'badge-red' : 'badge-green'}>
                                                    {item.calc}
                                                </span>
                                            </td>
                                            <td>
                                                {item.advice.split('Stunting').map((part, i, arr) => (
                                                    i < arr.length - 1 ? (
                                                        <React.Fragment key={i}>
                                                            {part}
                                                            <span className="highlight-blue">Stunting</span>
                                                        </React.Fragment>
                                                    ) : part
                                                ))}
                                            </td>
                                        </tr>
                                    ))}

                                    {showFullTable && resultData.slice(5, 10).map((item, index) => (
                                        <tr key={index + 5}>
                                            <td>{item.info}</td>
                                            <td>
                                                <span className={item.behaviorType === 'red' ? 'badge-red' : 'badge-green'}>
                                                    {item.behavior}
                                                </span>
                                            </td>
                                            <td>
                                                <span className={item.calcType === 'red' ? 'badge-red' : 'badge-green'}>
                                                    {item.calc}
                                                </span>
                                            </td>
                                            <td>
                                                {item.advice.split('Stunting').map((part, i, arr) => (
                                                    i < arr.length - 1 ? (
                                                        <React.Fragment key={i}>
                                                            {part}
                                                            <span className="highlight-blue">Stunting</span>
                                                        </React.Fragment>
                                                    ) : part
                                                ))}
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>

                            {/* ‡∏õ‡∏∏‡πà‡∏° toggle */}
                            <div style={{ margin: '16px 0', textAlign: 'center' }}>
                                <button
                                    className="recommendation-action-btn"
                                    onClick={() => setShowFullTable(!showFullTable)}
                                >
                                    {showFullTable ? '‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°' : '‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'}
                                </button>
                            </div>
                        </div>

                        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤ (1/4) */}
                        <div className="result-table-block right">
                            <table className="result-table">
                                <thead>
                                    <tr>
                                        <th>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á</td>
                                    </tr>
                                    <tr>
                                        <td>‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á</td>
                                    </tr>
                                    <tr>
                                        <td>‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á</td>
                                    </tr>
                                    <tr>
                                        <td>‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á</td>
                                    </tr>
                                </tbody>

                            </table>
                            <div className="recommendation-feedback-section">
                                <div className="feedback-title">‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞ / ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</div>
                                <textarea
                                    className="feedback-textarea"
                                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
                                    rows="5"
                                ></textarea>
                                <button className="feedback-submit-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞</button>
                            </div>

                        </div>

                    </div> {/* end .result-table-wrapper */}

                </div> {/* end .recommendation-result-section */}

            </div> {/* end .recommendation-page */}
            <Footer />
        </div>
    );
}

export default Recomendation;
